version: 2
jobs:
  build:
    docker:
      - image: h3poteto/phoenix:1.7.3
        environment:
          MIX_ENV: test
          DB_HOST: 127.0.0.1
      - image: postgres:10-alpine
        environment:
          POSTGRES_USER: pleroma
          POSTGRES_PASSWORD: pleroma
          POSTGRES_DB: pleroma_test
    working_directory: /var/opt/app
    steps:
      - checkout
      - restore_cache:
          name: Restoring cache - deps
          keys:
            - vendor-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
            - vendor-{{ checksum "mix.exs" }}-
      - restore_cache:
          name: Restoring cache - _build
          keys:
            - _build-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
            - _build-{{ checksum "mix.exs" }}
      - run:
          name: Mix packages install
          command: mix deps.get
      - save_cache:
          name: Saving cache - deps
          key: deps-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
          paths:
            - "deps"
      - run:
          name: Compile deps packages
          command: |
            mix local.hex --force
            mix local.rebar --force
            mix deps.compile
      - save_cache:
          name: Saving cache - _build
          key: _build-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
          paths:
            - "_build"
      - run:
          name: Migration database
          command: |
            mix ecto.create
            mix ecto.migrate
      - run:
          name: test
          command: mix test

  image:
    machine: true
    environment:
      - PHOENIX_ECR: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/pleroma/phoenix
      - NGINX_ECR: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/pleroma/nginx
    steps:
      - checkout
      - run:
          name: phoenix docker build
          command: |
            docker build -t $PHOENIX_ECR:$CIRCLE_SHA1 -f dockerfiles/phoenix/Dockerfile .
      - run:
          name: phoenix docker push
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker push $PHOENIX_ECR:$CIRCLE_SHA1
      - run:
          name: nginx docker build
          command: |
            cd dockerfiles/nginx
            docker build -t $NGINX_ECR:latest .
      - run:
          name: nginx docker push
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker push $NGINX_ECR:latest

  deploy:
    docker:
      - image: h3poteto/kubectl:latest
        environment:
          CLUSTER_NAME: base-prd
          AWS_ECR_REPOSITORY: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/pleroma/phoenix
    working_directory: /var/opt/kube
    steps:
      - run:
          name: entrypoint
          command: |
            /var/opt/kube/entrypoint.sh
      - run:
          name: Clone k8s services
          command: |
            git clone https://github.com/h3poteto/k8s-services.git
      - run:
          name: Version
          command: |
            kubectl version
      - run:
          name: deploy
          command: |
            kubectl patch -f k8s-services/pleroma/deployment.yml -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"go\",\"image\":\"${AWS_ECR_REPOSITORY}:${CIRCLE_SHA1}\"}]}}}}"



workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - image:
          filters:
            branches:
              only:
                - develop
      - deploy:
          filters:
            branches:
              only:
                - develop
          requires:
            - image
